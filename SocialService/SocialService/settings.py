"""
Django settings for SocialService project.

Generated by 'django-admin startproject' using Django 3.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path

import boto3

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_cu@&nfrmi89gc+jmk=^s2m@owj_ctgb03)*jj$=i7&##ss!5d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'corsheaders',
    # Custom apps
    'app_admin',
    'content_app',
    'moderate_app',
    'communication_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'SocialService.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SocialService.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'YearbookGaming_social',
        'USER': 'YearbookGamingadmin',
        'PASSWORD': 'admin1234',
        'HOST': 'db',
        'PORT': 5432,
        'ATOMIC_REQUESTS': False
    },
    'sqlite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'app_admin.YearbookGamingUser'


# Custom Authentication Backends
AUTHENTICATION_BACKENDS = [
    'app_admin.backends.AuthenticationBackend',
]

USE_DUMMY_LOGIN = True

DELETED_REF_USER_ID = 0


AWS_ACCESS_KEY_ID = os.environ.get("AWS_ACCESS_KEY_ID")  # s3_media_user
AWS_SECRET_ACCESS_KEY = os.environ.get("AWS_SECRET_ACCESS_KEY")  # s3_media_user
BUCKET_NAME = os.environ.get("s3_bucket_NAME") #'YearbookGaming_dev'
PRESIGNED_EXPIRATION_TIME = os.environ.get("PRESIGNED_URL_EXPIRES_IN")

PAGE_SIZE = 5

MAX_DEQUE_LIMIT = os.environ.get("MAX_DEQUE_LIMIT", 2)

S3_CLIENT = boto3.client('s3', 
                         aws_access_key_id=AWS_ACCESS_KEY_ID, 
                         aws_secret_access_key=AWS_SECRET_ACCESS_KEY)

DEFAULT_QUEUE_BROKER = "rabbitmq"
DEFAULT_QUEUE_SCHEME = "amqp"

QUEUE_BROKER = os.environ.get("MESSAGE_QUEUE_BROKER", DEFAULT_QUEUE_BROKER)
QUEUE_SCHEME = os.environ.get("MESSAGE_QUEUE_SCHEME", DEFAULT_QUEUE_SCHEME)
QUEUE_HOST = os.environ.get("MESSAGE_QUEUE_HOST")
QUEUE_PORT = os.environ.get(f"{QUEUE_BROKER}_PORT") # 5672
QUEUE_USER = os.environ.get(f"{QUEUE_BROKER}_USER") # "YearbookGamingadmin"
QUEUE_PASSWORD = os.environ.get(f"{QUEUE_BROKER}_PASSWORD") # "admin1234"

MESSAGE_QUEUE_URL = f"{QUEUE_SCHEME}://{QUEUE_USER}:{QUEUE_PASSWORD}@{QUEUE_HOST}:{QUEUE_PORT}"

MODERATION_SERVICE_URL = "http://localhost:8001"


CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

# CELERY Settings
_CELERY_BROKER = os.environ.get('CELERY_BROKER', Cache.DEFAULT_BROKER)
_broker_password = os.environ.get(f"{_CELERY_BROKER}_PASSWORD", Cache.DEFAULT_PASSWORD)
_broker_user = os.environ.get(f"{_CELERY_BROKER}_USER", Cache.DEFAULT_USER)
_BROKER_SCHEME = os.environ.get(f"{_CELERY_BROKER}_SCHEME", Cache.DEFAULT_SCHEME)
_CELERY_broker_port = os.environ.get(f"{_CELERY_BROKER}_PORT", Cache.DEFAULT_PORT)
_CELERY_HOST = os.environ.get("CELERY_HOST_CONTAINER", Cache.DEFAULT_HOST)
_BROKER_SUFFIX = os.environ.get(f"{_CELERY_BROKER}_SUFFIX", Cache.DEFAULT_SUFFIX)

broker_url = f"{_BROKER_SCHEME}://{_BROKER_USER}:{_broker_password}@{_CELERY_HOST}:{_CELERY_BROKER_PORT}/{_BROKER_SUFFIX}"


# CELERY Settings
broker_password = os.environ.get(f"{CELERY_BROKER}_PASSWORD", Cache.DEFAULT_PASSWORD)
broker_user = os.environ.get(f"{CELERY_BROKER}_USER", Cache.DEFAULT_USER)
CELERY_broker_port = os.environ.get(f"{CELERY_BROKER}_PORT", Cache.DEFAULT_PORT)
BROKER_URL = f"redis://{broker_user}:{broker_password}@{CELERY_HOST}:{CELERY_BROKER_PORT}/{BROKER_SUFFIX}"